{"version":3,"sources":["assets/lol.jpg","assets/logo.svg","styles/components.ts","pages/Home/index.tsx","config/index.js","router/Route.tsx","router/index.tsx","router/history.ts","styles/index.ts","App.tsx","ThemeContext.tsx","index.tsx"],"names":["module","exports","TextColor","theme","light","dark","FuhthestBackground","MiddleSecondBackground","Shadow","Button","styled","button","Input","input","Checkbox","Home","className","src","logo","alt","href","type","id","htmlFor","name","size","color","league","RouteWrapper","props","useEffect","title","trim","document","config","logged","to","Router","path","exact","component","from","createBrowserHistory","GlobalStyle","createGlobalStyle","withTheme","history","ThemeToggleContext","React","createContext","toggle","MyThemeProvider","children","useState","mode","themeState","setThemeState","Provider","value","localStorage","setItem","getItem","ReactDOM","render","getElementById"],"mappings":"0GAAAA,EAAOC,QAAU,IAA0B,iC,mBCA3CD,EAAOC,QAAU,IAA0B,kC,u3CCGpC,IAAMC,EAAYC,IAAM,OAAQ,CACrCC,MAAO,OACPC,KAAM,YAEKC,EAAqBH,IAAM,OAAQ,CAC9CC,MAAO,UACPC,KAAM,YAMKE,GAJmBJ,IAAM,OAAQ,CAC5CC,MAAO,UACPC,KAAM,YAE8BF,IAAM,OAAQ,CAClDC,MAAO,UACPC,KAAM,aAMKG,GAJoBL,IAAM,OAAQ,CAC7CC,MAAO,OACPC,KAAM,YAEcF,IAAM,OAAQ,CAClCC,MAAO,QACPC,KAAM,WAIKI,EAASC,IAAOC,OAAV,IACGJ,EACXL,EASoBM,GASlBI,GALgBF,YAAOD,EAAPC,CAAH,IAEJR,GAGDQ,IAAOG,MAAV,MA2BLC,EAAWJ,IAAOG,MAAV,K,0CCpEN,SAASE,IAEtB,OACE,8BAEA,yBAAKC,UAAU,QACb,yBAAKA,UAAU,SACb,gCACE,yBAAKC,IAAKC,IAAMC,IAAI,KACpB,mCACA,yBAAKH,UAAU,YACb,sMAGI,wEAC0C,uBAAGI,KAAK,eAAR,0CAOlD,qDAEA,yBAAKJ,UAAU,UACf,kBAACJ,EAAD,CAAOS,KAAK,OAAOC,GAAG,SACtB,2BAAOC,QAAQ,QAAf,uBAGA,yBAAKP,UAAU,UACf,kBAACJ,EAAD,CAAOS,KAAK,WAAWC,GAAG,UACzB,2BAAOC,QAAQ,SAAf,UAGD,2BACA,kBAACT,EAAD,CAAUO,KAAK,WAAWG,KAAK,UAC/B,2BAAOD,QAAQ,SAAf,iBAEA,kBAAC,IAAD,CAAcE,KAAM,GAAIC,MAAM,YAC9B,yBAAKV,UAAU,SACf,uBAAGI,KAAK,UAAR,eACD,2BACA,uBAAGA,KAAK,UAAR,wCACA,4CAMD,yBAAKJ,UAAU,aACb,yBAAKC,IAAKU,IAAQR,IAAI,iBC1D9B,IAGe,EACN,oBCMM,SAASS,EAAaC,GAOnC,OANAC,qBAAU,WACJD,EAAME,OAASF,EAAME,MAAMC,SAC7BC,SAASF,MAAT,UAAoBF,EAAME,MAA1B,cAAqCG,MAEtC,CAACL,EAAME,QAENF,EAAMM,OAAe,kBAAC,IAAD,CAAUC,GAAG,MAC/B,kBAAC,IAAUP,GCbL,SAASQ,IACtB,OACE,kBAAC,IAAD,KACE,kBAAC,EAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAWzB,EAAMgB,MAAM,SAC7C,kBAAC,IAAD,CAAUU,KAAK,IAAIL,GAAG,O,WCPbM,gB,y0GCEf,IAyIeC,EAzIKC,YAAH,IAQOtC,EACZJ,GCUG2C,eAXH,SAAChB,GACX,OACE,oCACE,kBAAC,IAAD,CAAQiB,QAASA,GACf,kBAAC,EAAD,OAEF,kBAAC,EAAD,U,QCZAC,EAAqBC,IAAMC,cAAc,CAC7CC,OAAQ,eAIGC,EAAkB,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,SAAsB,EAMlBC,mBAAS,CAC3CC,KAAM,UAP8C,mBAM/CC,EAN+C,KAMnCC,EANmC,KAStD,OACE,kBAACT,EAAmBU,SAApB,CAA6BC,MAAO,CAAER,OATzB,WACb,IAAMI,EAA2B,UAApBC,EAAWD,KAAX,eACbE,EAAc,CAAEF,KAAMA,IACtBK,aAAaC,QAAQ,OAAQN,MAO3B,kBAAC,IAAD,CACEnD,MAAO,CACLmD,KAAMK,aAAaE,QAAQ,QACvBF,aAAaE,QAAQ,QACrBN,EAAWD,OAGjB,oCAAGF,MCxBXU,IAASC,OACP,kBAAC,EAAD,KACE,kBAAC,EAAD,OAEF9B,SAAS+B,eAAe,W","file":"static/js/main.b297a6c2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/lol.60785311.jpg\";","module.exports = __webpack_public_path__ + \"static/media/logo.5742ab23.svg\";","import styled from \"styled-components\";\nimport theme from \"styled-theming\";\n\nexport const TextColor = theme(\"mode\", {\n  light: \"#333\",\n  dark: \"#DEE4E7\"\n});\nexport const FuhthestBackground = theme(\"mode\", {\n  light: \"#DEE4E7\",\n  dark: \"#111418\"\n});\nexport const MiddleBackground = theme(\"mode\", {\n  light: \"#eff0f2\",\n  dark: \"#191f24\"\n});\nexport const MiddleSecondBackground = theme(\"mode\", {\n  light: \"#f9f9fa\",\n  dark: \"#232a31\"\n});\nexport const ClosestBackground = theme(\"mode\", {\n  light: \"#fff\",\n  dark: \"#38434f\"\n});\nexport const Shadow = theme(\"mode\", {\n  light: \"#0002\",\n  dark: \"#fff2\"\n});\n\n\nexport const Button = styled.button`\n  background-color: ${MiddleSecondBackground};\n  color: ${TextColor};\n  padding: 15px 30px;\n  border-radius: 30px;\n  cursor: pointer;\n  transition: 0.2s;\n  border: none;\n  &:hover,\n  &:focus {\n    transform: translateY(-2px);\n    box-shadow: 0px 2px 30px ${Shadow};\n    outline: none;\n  }\n`;\nexport const ButtonOutline = styled(Button)`\n  background-color: transparent;\n  border: 1px solid ${TextColor};\n`;\n\nexport const Input = styled.input`\n    background-color: #ededed;\n    border-radius: 6px;\n    border: none;\n    height: 5px;\n    padding: 20px;\n    color: black;\n    width: 230px;\n    margin: 8px 0px;\n    font-weight: bold;\n    &:focus{\n      border: 2px solid black;\n      outline: none;\n     & + label{\n                line-height: 2.8;\n                font-size: 12px;\n              }\n    }\n      &:valid {\n       & +label{\n                line-height: 2.8;\n                font-size: 12px;\n        }\n     }\n\n`\n\nexport const Checkbox = styled.input`\n    height: 16px;\n    border: none;\n    border-radius: 4px;\n    background-color: #ededed;\n    margin: 0;\n    margin-right: 6px;  \n\n`\n","import React from \"react\";\nimport { Input, Checkbox } from \"src/styles/components\";\n//import { useTheme } from \"src/ThemeContext\";*/\nimport  league from '../../assets/lol.jpg';\nimport logo from '../../assets/logo.svg';\nimport { FiArrowRight} from 'react-icons/fi';\n\n\nexport default function Home() {\n  //const themeToggle = useTheme();\n  return (\n    <main>\n    { /* <Button onClick={() => themeToggle.toggle()}>Toggle Theme</Button> */ }\n    <div className=\"grid\">\n      <div className=\"login\">\n        <header>\n          <img src={logo} alt=\"\"/>\n          <span>?</span>\n          <div className=\"boxHover\">\n            <p>Você não precisa mais selecionar uma região antes de fazer login.\n               Quando fizer login, a região associada à sua conta será atualizada\n                automaticamente.</p>\n                <p>\n                Se estiver com problemas para fazer login,<a href=\"criar conta\">talvez precise atualizar sua conta.</a> \n                </p>\n\n          </div>\n        </header>\n        \n\n        <h1>Insira sua Conta Riot</h1>\n        \n        <div className=\"campos\">\n        <Input type=\"text\" id=\"name\"/>\n        <label htmlFor=\"name\">Nome de usuário</label>\n        </div>\n        \n        <div className=\"campos\">\n        <Input type=\"password\" id=\"senha\"/>       \n         <label htmlFor=\"senha\">Senha</label>\n        </div>\n\n        <p>\n        <Checkbox type=\"checkbox\" name=\"check\"/>\n        <label htmlFor=\"check\">Manter login</label>\n        </p>\n        <FiArrowRight size={35} color=\"#dbdbdb\"/>\n        <div className=\"notas\">\n        <a href=\"#teste\">criar conta</a>\n       <p> \n       <a href=\"#teste\">Não consegue iniciar a sessão?</a>\n       <span>V20.0.0</span>\n         </p> \n        </div>\n        \n      </div>\n\n      <div className=\"wallpaper\">\n        <img src={league} alt=\"Champions\"/>\n\n      </div>\n\n\n\n\n\n\n    </div>\n    </main>\n  );\n}\n","const baseUrl =\n  process.env.NODE_ENV === \"development\" ? \"localhost:8080\" : \"localhost:8080\";\n\nexport default {\n  title: \"League of Legends\",\n  baseUrl\n};\n","import React, { FunctionComponent, useEffect } from \"react\";\nimport { Redirect, Route, RouteProps } from \"react-router-dom\";\nimport config from \"../config\";\n\ninterface Props extends RouteProps {\n  logged?: Boolean;\n  title?: String;\n  component?: FunctionComponent;\n}\n\nexport default function RouteWrapper(props: Props) {\n  useEffect(() => {\n    if (props.title && props.title.trim()) {\n      document.title = `${props.title} - ${config.title}`;\n    }\n  }, [props.title]);\n\n  if (props.logged) return <Redirect to=\"/\" />;\n  return <Route {...props} />;\n}\n","import React from \"react\";\nimport { Redirect, Switch } from \"react-router-dom\";\nimport Home from \"../pages/Home\";\nimport Route from \"./Route\";\n\nexport default function Router() {\n  return (\n    <Switch>\n      <Route path=\"/\" exact component={Home} title=\"Home\" />\n      <Redirect from=\"*\" to=\"/\" />\n    </Switch>\n  );\n}\n","import { createBrowserHistory } from \"history\";\n\nexport default createBrowserHistory();\n","import { createGlobalStyle } from \"styled-components\";\nimport { FuhthestBackground, TextColor } from \"./components\";\n\n\nconst GlobalStyle = createGlobalStyle`\n  *{\n    @import url('https://fonts.googleapis.com/css2?family=Quicksand:wght@300;400;500;600;700&display=swap');\n    margin: 0;\n    padding: 0;\n    font-family: \"Quicksand\", \"sans-serif\";\n  }\n  body{\n    background-color: ${FuhthestBackground};\n    color:${TextColor};\n    box-sizing: border-box;\n  }\n  main{\n    .grid{\n      display: grid;\n      grid-template-columns: 30% 70%;\n      width: 1200px;\n      max-width: 1800px;\n      margin: 50px auto;\n      height: 540px;\n      .login{\n        background-color: #f9f9f9;\n        padding: 20px 30px;\n        display: flex;\n        flex-direction: column;\n        .campos{\n          position: relative;\n          label{\n            position: absolute;\n            top: 0;\n            left: 15px;\n            font-size: 14px;\n            line-height: 4;\n            cursor: text;\n            transition: line-height linear 1s;\n          }\n        }\n        header{\n          display: flex;\n         /* justify-content: space-between;*/\n          align-items: center;\n          width: 270px;\n          position: relative;\n          height: 50px;\n          img{\n            width: 50px;\n          }\n          span{\n            font-size: 13px;\n            color: white;\n            background-color: grey;\n            padding: 0px 5px;\n            border-radius: 100%;\n            position: absolute;\n            right: 0;\n            &:hover{\n              + div{\n                display: block;\n              }\n            }\n          }\n          .boxHover{\n            display: none;\n            width: 600px;\n            height: 300px;\n            transform: translate(108%,37%);\n            background-color: white;\n            p{\n              font-size: 14px;\n              font-weight: bold;\n              padding: 20px;\n              margin: 0;\n              a{\n                text-decoration: none;\n                color: #333;\n              }\n            }\n          }\n        }\n        h1{\n          font-size: 1.6em;\n          font-weight: bold;\n          margin-top: 60px;\n          margin-bottom: 30px;\n        }\n        p{\n          display: flex;\n          align-items: center;\n          margin: 10px 0px;\n        }\n        svg{\n          align-self: center;\n          border: 2px solid #dbdbdb;\n          border-radius: 22px;\n          padding: 12px;\n          margin: 40px 0px 70px;\n        }\n        .notas{\n          width: 270px;\n          a{\n            color: grey;\n            text-decoration: none;\n            font-size: 11px;\n            text-transform: uppercase;\n            &:hover{\n              color: black;\n              font-weight: bold;\n            }\n          }\n          p{\n            display: flex;\n            align-items: center;\n            justify-content: space-between;\n            margin: 0;\n            span{\n              color: grey;\n              text-decoration: none;\n              font-size: 10px;\n              text-transform: uppercase;\n              cursor: pointer;\n              &:hover{\n              color: black;\n              font-weight: bold;\n            }\n            }\n          }\n        }\n      }\n      .wallpaper{\n        img{\n          width: 100%;\n          height: 100%;\n        }\n      }\n    }\n  }\n`;\nexport default GlobalStyle;\n","import React from \"react\";\nimport { Router } from \"react-router-dom\";\nimport { withTheme } from \"styled-components\";\nimport Routes from \"./router\";\nimport history from \"./router/history\";\nimport GlobalStyle from \"./styles\";\n\ninterface Props {\n  theme: {\n    mode: String;\n  };\n}\nconst App = (props: Props) => {\n  return (\n    <>\n      <Router history={history}>\n        <Routes />\n      </Router>\n      <GlobalStyle />\n    </>\n  );\n};\n\nexport default withTheme(App);\n","import React, { ReactElement, useState } from \"react\";\nimport { ThemeProvider } from \"styled-components\";\n\ninterface Props {\n  children: ReactElement;\n}\nconst ThemeToggleContext = React.createContext({\n  toggle: () => {}\n});\nexport const useTheme = () => React.useContext(ThemeToggleContext);\n\nexport const MyThemeProvider = ({ children }: Props) => {\n  const toggle = () => {\n    const mode = themeState.mode === \"light\" ? `dark` : `light`;\n    setThemeState({ mode: mode });\n    localStorage.setItem(\"mode\", mode);\n  };\n  const [themeState, setThemeState] = useState({\n    mode: \"light\"\n  });\n  return (\n    <ThemeToggleContext.Provider value={{ toggle: toggle }}>\n      <ThemeProvider\n        theme={{\n          mode: localStorage.getItem(\"mode\")\n            ? localStorage.getItem(\"mode\")\n            : themeState.mode\n        }}\n      >\n        <>{children}</>\n      </ThemeProvider>\n    </ThemeToggleContext.Provider>\n  );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { MyThemeProvider } from \"./ThemeContext\";\n\nReactDOM.render(\n  <MyThemeProvider>\n    <App />\n  </MyThemeProvider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}